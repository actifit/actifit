/*apply plugin: 'com.android.application'

apply plugin: 'com.google.gms.google-services'

// Add the Firebase Crashlytics plugin.
apply plugin: 'com.google.firebase.crashlytics'*/

plugins{
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

final def markwonVersion = '4.6.2'

android {
    namespace "io.actifit.fitnesstracker.actifitfitnesstracker"
    /*packagingOptions {
        exclude 'META-INF/kotlin-stdlib-jdk7.kotlin_module'
    }*/
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {

        release {
            
        }
    }
    compileSdk 34
    defaultConfig {
        applicationId "io.actifit.fitnesstracker.actifitfitnesstracker"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 50
        versionName "v0.12.4"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    output.outputFileName = "Actifit " + defaultConfig.versionName + ".apk"
                }
            }
            buildConfigField("String", "GEMINI_API_KEY", "\"${getLocalProperty('gemini.api.key')}\"")
        }
        debug {
            buildConfigField("String", "GEMINI_API_KEY", "\"${getLocalProperty('gemini.api.key')}\"")
        }
    }
    buildFeatures{
        buildConfig = true
    }
    lint {
        checkReleaseBuilds false
    }
}

def getLocalProperty(String propertyName) {
    Properties properties = new Properties()
    try {
        File localProperties = project.rootProject.file('local.properties')
        if (localProperties.exists()) {
            properties.load(localProperties.newDataInputStream())
        }
    } catch (IOException e) {
        System.err.println("Failed to read local.properties - " + e.getMessage())
    }

    return properties.getProperty(propertyName)
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //enforce this version to avoid dependency conflicts
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))

    implementation "io.noties.markwon:core:${markwonVersion}"
    implementation "io.noties.markwon:editor:${markwonVersion}"
    implementation "io.noties.markwon:html:${markwonVersion}"
    implementation "io.noties.markwon:image:${markwonVersion}"
    implementation "io.noties.markwon:image-picasso:${markwonVersion}"
    implementation "io.noties.markwon:image-glide:${markwonVersion}"
    implementation "io.noties.markwon:linkify:${markwonVersion}"

    //add support for GIFS in markdown
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.27'

    implementation "androidx.core:core:1.10.1"

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.android.volley:volley:1.2.1'
    //implementation('com.amazonaws:aws-android-sdk-mobile-client:2.7.+@aar') { transitive = true }
    //implementation 'com.amazonaws:aws-android-sdk-s3:2.7.+'
    //implementation 'com.amazonaws:aws-android-sdk-cognito:2.7.+'


    //implementation 'com.mittsu:markedview:1.0.7@aar'
    //implementation 'com.github.mukeshsolanki:MarkdownView-Android:2.0.0'




    implementation 'com.scottyab:rootbeer-lib:0.0.7'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'com.github.scribejava:scribejava-apis:7.1.1'

    //implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'

    //adding those 2 dependencies attempt to resolve ActivityResultsContract not identified
    //when replacing deprecated call startActivity in VideoUploadFragment

    implementation "androidx.fragment:fragment:1.6.1"
    implementation "androidx.activity:activity:1.6.0"

    implementation ('androidx.appcompat:appcompat:1.6.1')
    implementation ('androidx.constraintlayout:constraintlayout:2.1.4')

    implementation ('androidx.lifecycle:lifecycle-livedata-ktx:2.6.1')
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation ('androidx.browser:browser:1.5.0')

    //used for markdown parsing
    implementation 'com.github.rjeschke:txtmark:0.13'

    //used for content sanitization
    implementation 'org.jsoup:jsoup:1.14.2'

    implementation ('com.google.firebase:firebase-core:21.1.1')

    // Add the Firebase Crashlytics SDK.
    implementation ('com.google.firebase:firebase-crashlytics:18.2.12')

    // Recommended: Add the Google Analytics SDK.
    implementation ('com.google.firebase:firebase-analytics:22.0.2')

    implementation ('com.google.firebase:firebase-messaging:24.0.0')

    implementation ('com.google.firebase:firebase-messaging-directboot:24.0.0')

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.google.android.material:material:1.6.1'

    implementation ('androidx.annotation:annotation:1.9.1')

    implementation ("androidx.localbroadcastmanager:localbroadcastmanager:1.0.0")


    implementation ('com.google.android.gms:play-services-fitness:21.2.0')
    implementation ('com.google.android.gms:play-services-auth:21.2.0')

    //implementation 'info.androidhive:fontawesome:0.0.5'

    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'

    implementation ('pl.droidsonroids.gif:android-gif-drawable:1.2.22')

    implementation ('com.google.android.gms:play-services-ads:22.2.0')

    implementation ('com.google.firebase:firebase-iid:21.1.0')

    implementation ('androidx.work:work-runtime:2.5.1')

    //for proper reading and formatting of image EXIF data
    implementation "androidx.exifinterface:exifinterface:1.4.1"

    //for hive signing
    implementation 'org.bitcoinj:bitcoinj-core:0.16'

    //for usermessaging
    implementation 'com.google.android.ump:user-messaging-platform:3.0.0'

    //for 3speak video upload
    implementation 'io.tus.android.client:tus-android-client:0.1.11'
    implementation 'io.tus.java.client:tus-java-client:0.5.0'

    //for exoplayer support (video playback)

    implementation "androidx.media3:media3-exoplayer:1.1.1"
    implementation "androidx.media3:media3-exoplayer-dash:1.1.1"
    implementation "androidx.media3:media3-ui:1.1.1"

    //for QR code support
    implementation 'com.google.android.gms:play-services-code-scanner:16.1.0'

    //for translations via deepl API
    implementation "com.deepl.api:deepl-java:1.5.0"

    //new image upload dependencies
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'de.hdodenhof:circleimageview:3.1.0'
//    i added the following line
    implementation("com.google.ai.client.generativeai:generativeai:0.5.0")

}
